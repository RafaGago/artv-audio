- Oversampling. The heavy lifting, which was doing latency compensation, is
  done. The main problem is that thre is not enough vertical space on the GUI.

- Still unfixed memory leaks on original TAL Reverb 2's code (mix-maxtrix-test
  catches them).

- Channel labels (?).

- Now that latency compensation is implemented, plugins like Sonic Anomaly's
  Bass Professor mkII and VOLA are viable. Many that I ignored because of
  latencies are suitable again.

- Free Clip/Peak Eater (?). https://gitlab.com/JHVenn/Free-Clip

- Saike Space on FM Filter 2 (?).

- Upwards compressor with clipper.

- Variation of the filters module with envelope follower on the cutoff.

- Optimization of Saike's filters (CPU hog).

- Pitch shifter.

- Enable and handle tons of warnings. Many on autogenerated or 3rd party code.
  Others on my own.

- Make all template paremeters match C++ convention (underscore case starting
   with uppercase?)

- EQ:
  -Port analog reeq bands (?).

- Atlantis crashes sometimes when changing FX. (Automatically fixed? Not found
  in a long while)

- If worth, performance optimizations. Math operations on fast paths, suboptimal
  memory layouts as on Ripple phaser. Vectorizations, Use the FMA intrinsic on
  XSIMD, etc.

- JSFX: "jsfx_invsqrt" is using Quake invsqrt instead of sse intrinsics or
  equivalent.

- Save window size on state.

- Floaty delay.

- Sonic anomaly. Leet delay.

- Surge: Nimbus, Reverb 2, Ensemble.

  I liked those effects, but it doesn't seem easy to pull from there:

  * The DSP is tightly-coupled to extremely big classes that I'd actually rather
    port manually (won't happen), as I see risk of a high level wrapper blowing
    up. Even a Biquad there needs a "SurgeStorage" megabloat class on
    construction.

  * No DSP class has a parameter with the samples to process.

  Then there are lots of small details about dynamic memory, LFOs, etc.

- Airwindows: Pocket verbs?+

- New Saike FX? SEQS reverb? Pitch Shifter?

- NP1136 Peak Lim?

- mda. DUB delay 02. Ambience? De-esser?

- Fix clang format issues, e.g. column alignments bigger than 3 or 4 chars. Then:

"for f in $(find src -name '*.hpp' -o -name '*.cpp'); do clang-format-12 $f -i -style=file; done"
